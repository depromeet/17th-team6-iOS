//
//  HomeInteractor.swift
//  DoRunDoRun
//
//  Created by Inho Choi on 9/13/25.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func loadOverallGoal(request: Home.LoadOverallGoal.Request)
    func loadSessionGoal(request: Home.LoadSessionGoal.Request)
}

protocol HomeDataStore {
    var overallGoal: OverallGoal? { get set }
}

final class HomeInteractor: HomeDataStore {
    var presenter: HomePresentationLogic?
    var worker: HomeWorker = HomeWorker()

    var overallGoal: OverallGoal?
}

extension HomeInteractor: HomeBusinessLogic {
    func loadOverallGoal(request: Home.LoadOverallGoal.Request) {
        Task {
            do {
                let goal = try await worker.loadOverallGoal()
                self.overallGoal = goal
                let response = Home.LoadOverallGoal.Response(overallGoal: goal)
                await MainActor.run { [weak self] in
                    self?.presenter?.presentOverallGoal(response: response)
                }
            } catch {
                print("ðŸš¨ Error: \(error.localizedDescription)")
            }
        }
    }
    
    func loadSessionGoal(request: Home.LoadSessionGoal.Request) {
        Task {
            do {
                let session = try await worker.loadSessionGoal()
                let response = Home.LoadSessionGoal.Response(sessionGoal: session)
                await MainActor.run { [weak self] in
                    self?.presenter?.presentSessionGoal(response: response)
                }
            } catch {
                print("ðŸš¨ Error: \(error.localizedDescription)")
            }
        }
    }
}

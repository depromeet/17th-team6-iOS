//  RunningViewController.swift
//  DoRunDoRun
//
//  Created by Inho Choi on 9/13/25.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import NMapsMap
import UIKit

protocol RunningDisplayLogic: AnyObject {
}

final class RunningViewController: UIViewController {
    var interactor: RunningBusinessLogic?
    var router: (RunningRoutingLogic & RunningDataPassing)?

    // MARK: UI Object

    private let navBar = RunningNavigationBar()

    private let goalView: GoalView = {
        let view = GoalView()
        view.translatesAutoresizingMaskIntoConstraints = false
        view.isHidden = false
        return view
    }()

    // Map Container UIView
    private let mapContainer: UIView = {
        let view = UIView()
        view.translatesAutoresizingMaskIntoConstraints = false
        view.isHidden = true
        return view
    }()

    private lazy var naverMapView: NMFMapView = {
        let mapView = NMFMapView(frame: .zero)
        mapView.translatesAutoresizingMaskIntoConstraints = false
        return mapView
    }()
    
    private let startRunningButton: UIButton = {
        let button = UIButton(type: .system)
        button.setTitle("러닝 시작", for: .normal)
        button.titleLabel?.font = UIFont.systemFont(ofSize: 16, weight: .bold)
        button.setTitleColor(.white, for: .normal)
        button.backgroundColor = UIColor(hex: 0x3E4FFF)
        button.layer.cornerRadius = 12
        button.translatesAutoresizingMaskIntoConstraints = false
        return button
    }()

    // MARK: Object lifecycle
    init() {
        super.init(nibName: nil, bundle: nil)
        setup()
    }

    @available(*, unavailable)
    required init?(coder: NSCoder) { fatalError("init(coder:) has not been implemented") }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = RunningInteractor()
        let presenter = RunningPresenter()
        let router = RunningRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        setUI()
        setDelegate()
        addAction()
    }

    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        view.bringSubviewToFront(navBar)
    }

    private func setUI() {
        view.backgroundColor = .white
        view.addSubviews(goalView, mapContainer, navBar, startRunningButton)
        navigationController?.navigationBar.isHidden = true

        // naverMapView를 mapContainer에 추가
        mapContainer.addSubview(naverMapView)

        NSLayoutConstraint.activate([
            // Navigation Bar 제약 조건
            navBar.heightAnchor.constraint(equalToConstant: 44),
            navBar.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor),
            navBar.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            navBar.trailingAnchor.constraint(equalTo: view.trailingAnchor),

            // Goal View 제약 조건
            goalView.topAnchor.constraint(equalTo: navBar.bottomAnchor),
            goalView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            goalView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            goalView.bottomAnchor.constraint(lessThanOrEqualTo: view.safeAreaLayoutGuide.bottomAnchor),

            // Map Container 제약 조건
            mapContainer.topAnchor.constraint(equalTo: view.topAnchor),
            mapContainer.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            mapContainer.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            mapContainer.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor),
            
            // Naver Map View가 mapContainer 전체를 채우도록 제약 조건 설정
            naverMapView.topAnchor.constraint(equalTo: mapContainer.topAnchor),
            naverMapView.leadingAnchor.constraint(equalTo: mapContainer.leadingAnchor),
            naverMapView.trailingAnchor.constraint(equalTo: mapContainer.trailingAnchor),
            naverMapView.bottomAnchor.constraint(equalTo: mapContainer.bottomAnchor),
            
            // Start Running Button 높이만 설정 (레이아웃은 사용자가 직접 설정)
            startRunningButton.heightAnchor.constraint(equalToConstant: 56),
            startRunningButton.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            startRunningButton.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            startRunningButton.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor, constant: -24),
        ])
    }

    private func setDelegate() {
        navBar.delegate = self
    }

    private func addAction() {
        let action = UIAction { [weak self] _ in
            self?.displayStartRunning()
        }
        startRunningButton.addAction(action, for: .touchUpInside)
    }
}

extension RunningViewController: RunningDisplayLogic {

}

extension RunningViewController: NavigationBarDelegate {
    func displayStartRunning() {
        // TabBar까지 완전히 덮는 오버레이 표시
        self.showFullScreenOverlayOnRootView()

        // 대안: Root View에 오버레이 추가 (더 안정적)
        // self.showFullScreenOverlayOnRootView()
        
        print("러닝 시작 오버레이가 표시되었습니다.")
    }

    func didTapBackButton() {
        print("Back button tapped")
        navigationController?.popViewController(animated: true)
    }

    func didSelectSegment(at index: Int) {
        print("Segment selected at index: \(index)")
        switch index {
            case 0:
                goalView.isHidden = false
                mapContainer.isHidden = true
            case 1:
                goalView.isHidden = true
                mapContainer.isHidden = false
            default:
                break
        }
    }
}

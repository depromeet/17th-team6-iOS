//
//  RunningPresenter.swift
//  DoRunDoRun
//
//  Created by Inho Choi on 9/13/25.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RunningPresentationLogic {
    func presentDrawRoute(response: Running.DrawRoute.Response)
    func presentRunningUpdate(response: Running.RunningUpdate.Response)
    func presentStartRunning(response: Running.StartRunning.Response)
}

final class RunningPresenter {
    weak var viewController: RunningDisplayLogic?
}

extension RunningPresenter: RunningPresentationLogic {
    func presentDrawRoute(response: Running.DrawRoute.Response) {
        Task { @MainActor in
            viewController?.displayDrawRoute(viewModel: .init(coords: response.coords))
        }
    }
    
    func presentRunningUpdate(response: Running.RunningUpdate.Response) {
        Task { @MainActor in
            let startTime = response.startTime
            let currentTime = response.value.timestamp
            let metrics = response.value.metrics.toViewModel()
            let viewModel = Running.RunningUpdate.ViewModel(
                value: response.value,
                runningTimeString: timeDifference(from: startTime, to: currentTime),
                metrics: metrics
            )
            viewController?.displayRunningUpdate(viewModel: viewModel)
        }
    }
    
    func presentStartRunning(response: Running.StartRunning.Response) {
        Task { @MainActor in
            viewController?.displayStartRunning(viewModel: .init())
        }
    }

    private func timeDifference(from startDate: Date, to endDate: Date) -> String {
        let timeInterval = endDate.timeIntervalSince(startDate)
        let absoluteInterval = abs(timeInterval)

        let hours = Int(absoluteInterval) / 3600
        let minutes = Int(absoluteInterval) % 3600 / 60
        let seconds = Int(absoluteInterval) % 60

        return String(format: "%02d:%02d:%02d", hours, minutes, seconds)
    }
}
